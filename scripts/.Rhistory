summarise(
UniqueIdeophones = n_distinct(Ideophone),      # Unique ideophones per book
UniqueBaseForms = n_distinct(BaseForm),        # Unique base forms per book
PageCount = unique(PageCount),                # Total pages per book (already unique)
IdeophonesPerPage = UniqueIdeophones / PageCount, # Unique ideophones per page
BaseFormsPerPage = UniqueBaseForms / PageCount,   # Unique base forms per page
.groups = "drop"                              # Ungroup after summarising
)
df %>%
group_by(BookTitle, AgeGroup) %>%
reframe(
UniqueIdeophones = n_distinct(Ideophone),  # Unique ideophones per book
BaseForms = n_distinct(BaseForm),          # Unique base forms per book
PageCount = unique(PageCount),             # Use the unique PageCount per book
.groups = "drop"                           # Ungroup after summarising
) %>%
group_by(AgeGroup) %>%
reframe(
TotalBooks = n(),                          # Number of books in each age group
AvgIdeophonesPerBook = mean(UniqueIdeophones, na.rm = TRUE), # Avg ideophones per book
AvgBaseFormsPerBook = mean(BaseForms, na.rm = TRUE),         # Avg base forms per book
AvgIdeophonesPerPage = mean(UniqueIdeophones / PageCount, na.rm = TRUE), # Avg ideophones per page
AvgBaseFormsPerPage = mean(BaseForms / PageCount, na.rm = TRUE),         # Avg base forms per page
.groups = "drop"                           # Ungroup after summarising
)
ideophones_per_book <- df %>%
group_by(BookTitle, AgeGroup, PageCount) %>%
summarise(
TotalIdeophones = n(),  # Total ideophones in the book
IdeophonesPerPage = TotalIdeophones / PageCount,  # Ideophones per page
.groups = "drop"
)
ideophones_per_book
df %>%
group_by(BookTitle, AgeGroup, PageCount) %>%
summarise(
TotalIdeophones = n(),  # Total ideophones in the book
IdeophonesPerPage = TotalIdeophones / PageCount,  # Ideophones per page
.groups = "drop"
) %>%
group_by(AgeGroup) %>%
summarise(
AvgIdeophonesPerPage = mean(IdeophonesPerPage, na.rm = TRUE),
MedianIdeophonesPerPage = median(IdeophonesPerPage, na.rm = TRUE),
SD_IdeophonesPerPage = sd(IdeophonesPerPage, na.rm = TRUE),
TotalBooks = n(),
.groups = "drop"
)
ideophones_per_book <- df %>%
group_by(BookTitle, AgeGroup, PageCount) %>%
summarise(
TotalIdeophones = n(),  # Total ideophones in the book
IdeophonesPerPage = TotalIdeophones / PageCount,  # Ideophones per page
.groups = "drop"
)
ideophones_per_book <- df %>%
group_by(BookTitle, AgeGroup, PageCount) %>%
reframe(
TotalIdeophones = n(),  # Total ideophones in the book
IdeophonesPerPage = TotalIdeophones / PageCount,  # Ideophones per page
.groups = "drop"
)
ideophones_per_book %>%
group_by(AgeGroup) %>%
reframe(
AvgIdeophonesPerPage = mean(IdeophonesPerPage, na.rm = TRUE),
MedianIdeophonesPerPage = median(IdeophonesPerPage, na.rm = TRUE),
SD_IdeophonesPerPage = sd(IdeophonesPerPage, na.rm = TRUE),
TotalBooks = n(),
.groups = "drop"
)
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE, color = "black", fill = "white") +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,3)) +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,3.5)) +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,4)) +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,4.5)) +
guides(fill = "none")
ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = ideophones_per_book
)
ideophones_per_book %>%
summarise(
MissingValues = sum(is.na(IdeophonesPerPage)),
InfiniteValues = sum(is.infinite(IdeophonesPerPage))
)
ideophones_per_book <- ideophones_per_book %>%
filter(!is.na(IdeophonesPerPage) & !is.infinite(IdeophonesPerPage))
ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = ideophones_per_book
)
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage)) +
geom_point(alpha = 0.7, color = colorBlindBlack8[3]) +
geom_smooth(method = "lm", color = colorBlindBlack8[4], se = FALSE) +
labs(
title = "Ideophones per Page vs. Page Count",
x = "Total Pages in Book",
y = "Ideophones per Page"
) +
theme_classic()
correlationBF(
x = ideophones_per_book$PageCount,
y = ideophones_per_book$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
)
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones Per Page by Age Group",
x = "Age Group",
y = "Ideophones Per Page"
) +
theme_classic() +
guides(fill = "none")
ttestBF(
formula = IdeophonePercentage ~ AgeGroup,
data = ideophone_count_per_book
)
ttestBF(
formula = IdeophonePercentage ~ AgeGroup,
data = as.data.frame(ideophone_count_per_book),
rscale = 0.5  # Smaller prior scale
)
ttestBF(
formula = IdeophonePercentage ~ AgeGroup,
data = as.data.frame(ideophone_count_per_book),
rscale = 0.2  # Smaller prior scale
)
correlationBF(
x = ideophones_per_book$PageCount,
y = ideophones_per_book$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
)
correlationBF(
x = ideophone_count_per_book$TotalWords,
y = ideophone_count_per_book$Ideophones,
rscale = 0.707  # Default prior scale
)
correlationBF(
x = ideophones_per_book$PageCount,
y = ideophones_per_book$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
)
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage)) +
geom_point(alpha = 0.7, color = colorBlindBlack8[2]) +
geom_smooth(method = "lm", color = colorBlindBlack8[4], se = FALSE) +
labs(title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page") +
theme_classic()
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
ideophone_count_per_book %>%
group_by(AgeGroup) %>%
summarise(
Correlation = cor(TotalWords, Ideophones, use = "complete.obs"),
n = n()  # Number of books in each group
)
ideophone_count_per_book %>%
group_by(AgeGroup) %>%
summarise(
BF = correlationBF(
x = TotalWords,
y = Ideophones,
rscale = 0.707
)
)
ggplot(ideophone_count_per_book, aes(x = TotalWords, y = Ideophones, color = factor(AgeGroup))) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Relationship between Total Words and Ideophones by Age Group",
x = "Total Words",
y = "Ideophones",
color = "Age Group"
) +
theme_minimal()
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage, color = factor(AgeGroup))) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Relationship between Total Words and Ideophones by Age Group",
x = "Total Words",
y = "Ideophones",
color = "Age Group"
) +
theme_minimal()
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage, color = factor(AgeGroup))) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page",
color = "Age Group"
) +
theme_minimal()
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage)) +
geom_point(alpha = 0.7, color = colorBlindBlack8[2]) +
geom_smooth(method = "lm", color = colorBlindBlack8[4], se = FALSE) +
labs(title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page") +
theme_classic()
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage, color = factor(AgeGroup))) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page",
color = "Age Group"
) +
theme_minimal()
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
BF = correlationBF(
x = PageCount,
y = IdeophonesPerPage,
rscale = 0.707  # Default prior scale
),
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n()  # Number of observations
)
ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
BF = as.numeric(correlationBF(
x = PageCount,
y = IdeophonesPerPage,
rscale = 0.707  # Default prior scale
)),  # Extract numeric Bayes Factor
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n(),  # Number of observations
.groups = "drop"  # Ensure the result is ungrouped
)
ideophones_per_book %>%
split(.$AgeGroup) %>%
map(~ correlationBF(
x = .$PageCount,
y = .$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
))
# Calculate correlation Bayes Factors for each age group
bf_values <- ideophones_per_book %>%
split(.$AgeGroup) %>%
map(~ correlationBF(
x = .$PageCount,
y = .$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
))
# Extract the Bayes Factors as numeric values
bf_values_numeric <- map_dbl(bf_values, as.numeric)
bf_values
View(baseform_freq)
View(bf_values)
bf_values$1
plot(bf_values)
plot(correlationBF(
x = ideophones_per_book$PageCount,
y = ideophones_per_book$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
))
as.data.frame(bf_values)
ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n()  # Number of observations
)
as.data.frame(bf_values)$X1.bf
# Summarize data by age group
ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n()  # Number of observations
) %>%
mutate(
BF = c(as.data.frame(bf_values)$X1.bf, as.data.frame(bf_values)$X2.bf)  # Add Bayes Factors to the table
)
# Calculate correlation Bayes Factors for each age group
bf_values <- ideophones_per_book %>%
split(.$AgeGroup) %>%
map(~ correlationBF(
x = .$PageCount,
y = .$IdeophonesPerPage,
rscale = 0.707  # Default prior scale
))
bf_values
# Summarize data by age group
ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n()  # Number of observations
) %>%
mutate(
BF = c(as.data.frame(bf_values)$X1.bf, as.data.frame(bf_values)$X2.bf)  # Add Bayes Factors to the table
)
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage, color = factor(AgeGroup))) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page",
color = "Age Group"
) +
theme_minimal()
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "cor_PageCount_IdeophonesPerPage_AgeGroup.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
# Summarize data by age group
bf_by_group <- ideophones_per_book %>%
group_by(AgeGroup) %>%
summarise(
Correlation = cor(PageCount, IdeophonesPerPage, use = "complete.obs"),
n = n()  # Number of observations
) %>%
mutate(
BF = c(as.data.frame(bf_values)$X1.bf, as.data.frame(bf_values)$X2.bf)  # Add Bayes Factors to the table
)
bf_by_group %>%
summarise(
Difference = abs(Correlation[1] - Correlation[2]),  # Difference in correlations
BFComparison = ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = ideophones_per_book
)
)
bf_by_group %>%
summarise(
Difference = abs(Correlation[1] - Correlation[2]),  # Difference in correlations
BFComparison = ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = bf_by_group
)
)
BFComparison = ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = bf_by_group
)
BFComparison <-  ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = bf_by_group
)
ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = bf_by_group
)
bf_by_group
ttestBF(
formula = IdeophonesPerPage ~ AgeGroup,
data = ideophones_per_book
)
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage)) +
geom_point(alpha = 0.7, color = colorBlindBlack8[3]) +
geom_smooth(method = "lm", color = colorBlindBlack8[4], se = FALSE) +
labs(
title = "Ideophones per page vs. page count",
x = "Total pages in book",
y = "Ideophones per page"
) +
theme_classic()
ggplot(ideophones_per_book, aes(x = PageCount, y = IdeophonesPerPage)) +
geom_point(alpha = 0.7, color = colorBlindBlack8[2]) +
geom_smooth(method = "lm", color = colorBlindBlack8[4], se = FALSE) +
labs(title = "Correlation between number of pages and ideophones per page",
x = "Number of pages",
y = "Ideophones per page") +
theme_classic()
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,4.5)) +
guides(fill = "none")
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per Page by Age Group",
x = "Age Group",
y = "Ideophones per Page"
) +
theme_classic() +
ylim(c(0,4.5)) +
guides(fill = "none")
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
ggplot(ideophones_per_book, aes(x = factor(AgeGroup), y = IdeophonesPerPage, fill = factor(AgeGroup))) +
geom_violin(alpha = 0.6, trim = FALSE) +
geom_boxplot(width = 0.1, outlier.shape = NA, notch = TRUE) +
scale_fill_manual(values = colorBlindBlack8[c(2, 4)]) +
labs(
title = "Ideophones per page by age group",
x = "Age group",
y = "Ideophones per page"
) +
theme_classic() +
ylim(c(0,4.5)) +
guides(fill = "none")
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.pdf"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.jpg"),
width = 6, height = 4);
ggsave(plot = last_plot(), filename = paste0(plots, "ageGroup_IdeophonesPerPage.tif"),
width = 6, height = 4, compression="lzw", dpi=600);
